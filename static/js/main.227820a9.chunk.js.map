{"version":3,"sources":["functions/config.js","functions/http.js","components/leagues.js","functions/poe-ninja.js","contexts/utils.js","functions/utils.js","contexts/items.js","components/comparison.js","functions/compareItems.js","components/comparisons.js","components/app.js","index.js"],"names":["proxy","url","concat","fetchJSON","fetch","then","response","text","textResponse","ok","Error","status","JSON","parse","error","fetchLeagues","leagues","tempLeagues","filter","leagueHash","leagueName","id","some","prohibitedWord","toLowerCase","includes","tempSC","tempHC","length","Standard","Hardcore","Temp SC","Temp HC","mapToMetaLeagues","catch","console","typeConfig","config","_i","_Object$entries","Object","entries","currency","currencies","type","name_key","compare_key","fragments","item","accessories","weapons","armours","divination_cards","base_types","maps","scarabs","jewels","flasks","_ref3","categoryItems","slicedToArray","assign","useEnsureProvider","context","ctx","React","useContext","displayName","SingleExecutionLockContext","createContext","SingleExecutionLockProvider","props","lock","useRef","react_default","a","createElement","Provider","value","isDefined","ItemsContext","ItemsProvider","_React$useState","useState","_React$useState2","items","setItems","useMemo","fetchItems","league","fetchPromises","map","_ref4","_ref5","category","_ref6","_ref7","details","itemsApi","log","itemsForLeague","lines","flat","Promise","all","useSelectedLeagueItems","selectedLeague","_useItems","_useItems2","fetchAllowed","key","executionLock","executionAllowed","current","useSingleExecutionLock","useEffect","fetchedItems","mergedItems","obj","stringify","err","deepClone","defineProperty","useFindItems","names","name","foundItem","_ref2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","return","find","Comparison","_ref","comparison","useCompareText","baseNames","compareNames","baseItems","compareItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","baseItem","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","compareItem","Math","round","comparePrice","useCostText","pieces","cost","style","order","base","compare","comment","ComparisonText","Comparisons","comparisonsByGroup","Pure vs. normal Breachstones","Divination cards vs. outcome","Gilded Scarabs","Item prices","Incursion uniques (vials excluded)","keys","group","i","comparison_Comparison","App","_useSelectedLeague","_useState","_useState2","setLeagues","fetchedLeagues","_useState3","_useState4","selectedMetaLeague","setSelectedMetaLeague","_useState5","_useState6","setSelectedLeague","metaLeagues","useSelectedLeague","onChange","event","target","utils_SingleExecutionLockProvider","items_ItemsProvider","comparisons_Comparisons","rootElement","document","getElementById","ReactDOM","render","app"],"mappings":"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","file":"static/js/main.227820a9.chunk.js","sourcesContent":["export const proxy = url => {\r\n  return `https://c-hive-proxy.herokuapp.com/${url}`;\r\n};\r\n\r\nexport const leaguesApi = () => {\r\n  return proxy(\"http://api.pathofexile.com/leagues?type=main&compact=1\");\r\n};\r\n\r\nexport const comparisons = () => {\r\n  return {\r\n    \"Pure vs. normal Breachstones\": [\r\n      {\r\n        name: \"Chayula\",\r\n        base: [\"Chayula's Pure Breachstone\"],\r\n        compare: [\"Chayula's Breachstone\"],\r\n      },\r\n      {\r\n        name: \"Uul-Netol\",\r\n        base: [\"Uul-Netol's Pure Breachstone\"],\r\n        compare: [\"Uul-Netol's Breachstone\"],\r\n      },\r\n      {\r\n        name: \"Tul\",\r\n        base: [\"Tul's Pure Breachstone\"],\r\n        compare: [\"Tul's Breachstone\"],\r\n      },\r\n      {\r\n        name: \"Xoph\",\r\n        base: [\"Xoph's Pure Breachstone\"],\r\n        compare: [\"Xoph's Breachstone\"],\r\n      },\r\n      {\r\n        name: \"Esh\",\r\n        base: [\"Esh's Pure Breachstone\"],\r\n        compare: [\"Esh's Breachstone\"],\r\n      },\r\n    ],\r\n    \"Divination cards vs. outcome\": [\r\n      {\r\n        name: \"The Apothecary (Mageblood)\",\r\n        base: [\"Mageblood\"],\r\n        compare: [\r\n          \"The Apothecary\",\r\n          \"The Apothecary\",\r\n          \"The Apothecary\",\r\n          \"The Apothecary\",\r\n          \"The Apothecary\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"The Nurse\",\r\n        base: [\"The Doctor\"],\r\n        compare: [\r\n          \"The Nurse\",\r\n          \"The Nurse\",\r\n          \"The Nurse\",\r\n          \"The Nurse\",\r\n          \"The Nurse\",\r\n          \"The Nurse\",\r\n          \"The Nurse\",\r\n          \"The Nurse\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"Succor of the Sinless (Bottled Faith)\",\r\n        base: [\"Bottled Faith\"],\r\n        compare: [\r\n          \"Succor of the Sinless\",\r\n          \"Succor of the Sinless\",\r\n          \"Succor of the Sinless\",\r\n          \"Succor of the Sinless\",\r\n          \"Succor of the Sinless\",\r\n          \"Succor of the Sinless\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"The Sephirot\",\r\n        base: [\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n          \"Divine Orb\",\r\n        ],\r\n        compare: [\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n          \"The Sephirot\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"The Hoarder (Exalted Orb)\",\r\n        base: [\"Exalted Orb\"],\r\n        compare: [\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n          \"The Hoarder\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"Abandoned Wealth (3x Exalted Orb)\",\r\n        base: [\"Exalted Orb\", \"Exalted Orb\", \"Exalted Orb\"],\r\n        compare: [\r\n          \"Abandoned Wealth\",\r\n          \"Abandoned Wealth\",\r\n          \"Abandoned Wealth\",\r\n          \"Abandoned Wealth\",\r\n          \"Abandoned Wealth\",\r\n        ],\r\n      },\r\n      {\r\n        name: \"Nook's Crown (Elder Bone Helmet ilvl100)\",\r\n        base: [\"bone-helmet-86-elder\"],\r\n        compare: [\r\n          \"Nook's Crown\",\r\n          \"Nook's Crown\",\r\n          \"Nook's Crown\",\r\n          \"Nook's Crown\",\r\n        ],\r\n      },\r\n    ],\r\n    \"Gilded Scarabs\": [\r\n      {\r\n        name: \"Sulphite\",\r\n        base: [\"Gilded Sulphite Scarab\"],\r\n        compare: [],\r\n        comment: \"Cameria\",\r\n      },\r\n      {\r\n        name: \"Legion\",\r\n        base: [\"Gilded Legion Scarab\"],\r\n        compare: [],\r\n        comment: \"Vagan\",\r\n      },\r\n      {\r\n        name: \"Harbinger\",\r\n        base: [\"Gilded Harbinger Scarab\"],\r\n        compare: [],\r\n        comment: \"Tora\",\r\n      },\r\n      {\r\n        name: \"Bestiary\",\r\n        base: [\"Gilded Bestiary Scarab\"],\r\n        compare: [],\r\n        comment: \"Jorgin\",\r\n      },\r\n      {\r\n        name: \"Divination\",\r\n        base: [\"Gilded Divination Scarab\"],\r\n        compare: [],\r\n        comment: \"Gravicius\",\r\n      },\r\n      {\r\n        name: \"Cartography\",\r\n        base: [\"Gilded Cartography Scarab\"],\r\n        compare: [],\r\n        comment: \"Rin\",\r\n      },\r\n      {\r\n        name: \"Torment\",\r\n        base: [\"Gilded Torment Scarab\"],\r\n        compare: [],\r\n        comment: \"Leo\",\r\n      },\r\n      {\r\n        name: \"Shaper\",\r\n        base: [\"Gilded Shaper Scarab\"],\r\n        compare: [],\r\n        comment: \"Vorici\",\r\n      },\r\n      {\r\n        name: \"Elder\",\r\n        base: [\"Gilded Elder Scarab\"],\r\n        compare: [],\r\n        comment: \"Korell\",\r\n      },\r\n      {\r\n        name: \"Reliquary\",\r\n        base: [\"Gilded Reliquary Scarab\"],\r\n        compare: [],\r\n        comment: \"Elreon\",\r\n      },\r\n      {\r\n        name: \"Breach\",\r\n        base: [\"Gilded Breach Scarab\"],\r\n        compare: [],\r\n        comment: \"It That Fled\",\r\n      },\r\n      {\r\n        name: \"Ambush\",\r\n        base: [\"Gilded Ambush Scarab\"],\r\n        compare: [],\r\n        comment: \"Haku\",\r\n      },\r\n      {\r\n        name: \"Perandus\",\r\n        base: [\"Gilded Perandus Scarab\"],\r\n        compare: [],\r\n        comment: \"Janus\",\r\n      },\r\n    ],\r\n    \"Item prices\": [\r\n      {\r\n        name: \"Exalted Orb\",\r\n        base: [\"Exalted Orb\"],\r\n        compare: [],\r\n      },\r\n    ],\r\n    \"Incursion uniques (vials excluded)\": [\r\n      {\r\n        name: \"Apep's Supremacy\",\r\n        base: [\"Apep's Supremacy\"],\r\n        compare: [\"Apep's Slumber\"],\r\n        comment:\r\n          \"Vial of Awakening: https://www.pathofexile.com/trade/search/Metamorph/KYVR6Ri5\",\r\n      },\r\n      {\r\n        name: \"Slavedriver's Hand\",\r\n        base: [\"Slavedriver's Hand\"],\r\n        compare: [\"Architect's Hand\"],\r\n        comment:\r\n          \"Vial of Dominance: https://www.pathofexile.com/trade/search/Metamorph/q2Ew93Cg\",\r\n      },\r\n      {\r\n        name: \"Mask of the Stitched Demon\",\r\n        base: [\"Mask of the Stitched Demon\"],\r\n        compare: [\"Mask of the Spirit Drinker\"],\r\n        comment:\r\n          \"Vial of Summoning: https://www.pathofexile.com/trade/search/Metamorph/mZprJJH6\",\r\n      },\r\n      {\r\n        name: \"Coward's Legacy\",\r\n        base: [\"Coward's Legacy\"],\r\n        compare: [\"Coward's Chains\"],\r\n        comment:\r\n          \"Vial of Consequence: https://www.pathofexile.com/trade/search/Metamorph/REManrf7\",\r\n      },\r\n      {\r\n        name: \"Fate of the Vaal\",\r\n        base: [\"Fate of the Vaal\"],\r\n        compare: [\"Story of the Vaal\"],\r\n        comment:\r\n          \"Vial of Fate: https://www.pathofexile.com/trade/search/Metamorph/ak4Q2pte\",\r\n      },\r\n      {\r\n        name: \"Omeyocan\",\r\n        base: [\"Omeyocan\"],\r\n        compare: [\"Dance of the Offered\"],\r\n        comment:\r\n          \"Vial of the Ritual: https://www.pathofexile.com/trade/search/Metamorph/9d9Wk4uK\",\r\n      },\r\n      {\r\n        name: \"Zerphi's Heart\",\r\n        base: [\"Zerphi's Heart\"],\r\n        compare: [\"Sacrificial Heart\"],\r\n        comment:\r\n          \"Vial of Sacrifice: https://www.pathofexile.com/trade/search/Metamorph/pY25JWi0\",\r\n      },\r\n      {\r\n        name: \"Soul Ripper\",\r\n        base: [\"Soul Ripper\"],\r\n        compare: [\"Soul Catcher\"],\r\n        comment:\r\n          \"Vial of the Ghost: https://www.pathofexile.com/trade/search/Metamorph/rGdy0gHQ\",\r\n      },\r\n      {\r\n        name: \"Transcendent Flesh\",\r\n        base: [\"Transcendent Flesh\"],\r\n        compare: [\"Tempered Flesh\"],\r\n        comment:\r\n          \"Vial of Transcendence: https://www.pathofexile.com/trade/search/Metamorph/Q34bbRuw\",\r\n      },\r\n      {\r\n        name: \"Transcendent Mind\",\r\n        base: [\"Transcendent Mind\"],\r\n        compare: [\"Tempered Mind\"],\r\n        comment:\r\n          \"Vial of Transcendence: https://www.pathofexile.com/trade/search/Metamorph/Q34bbRuw\",\r\n      },\r\n      {\r\n        name: \"Transcendent Spirit\",\r\n        base: [\"Transcendent Spirit\"],\r\n        compare: [\"Tempered Spirit\"],\r\n        comment:\r\n          \"Vial of Transcendence: https://www.pathofexile.com/trade/search/Metamorph/Q34bbRuw\",\r\n      },\r\n    ],\r\n  };\r\n};\r\n","export const fetchJSON = url => {\r\n  return fetch(url).then(response => {\r\n    return response.text().then(textResponse => {\r\n      if (response.ok) {\r\n        try {\r\n          return JSON.parse(textResponse);\r\n        } catch (error) {\r\n          throw new Error(\r\n            `Could not JSON parse reponse: ${textResponse}. Error: ${error}`\r\n          );\r\n        }\r\n      } else {\r\n        throw new Error(`HTTP error: ${response.status} - ${textResponse}`);\r\n      }\r\n    });\r\n  });\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { leaguesApi } from \"../functions/config\";\r\nimport { fetchJSON } from \"../functions/http\";\r\n\r\nconst mapToMetaLeagues = leagues => {\r\n  const tempLeagues = leagues.filter(leagueHash => {\r\n    const leagueName = leagueHash.id;\r\n    return !(\r\n      [\"ssf\", \"standard\"].some(prohibitedWord =>\r\n        leagueName.toLowerCase().includes(prohibitedWord)\r\n      ) || leagueName.toLowerCase() === \"hardcore\"\r\n    );\r\n  });\r\n\r\n  const tempSC = tempLeagues.filter(leagueHash => {\r\n    return !leagueHash.id.toLowerCase().includes(\"hardcore\");\r\n  });\r\n\r\n  const tempHC = tempLeagues.filter(leagueHash => {\r\n    return leagueHash.id.toLowerCase().includes(\"hardcore\");\r\n  });\r\n\r\n  if (tempSC.length !== 1 || tempHC.length !== 1) {\r\n    return {\r\n      Standard: \"Standard\",\r\n      Hardcore: \"Hardcore\",\r\n    };\r\n  }\r\n\r\n  return {\r\n    \"Temp SC\": tempSC[0].id,\r\n    \"Temp HC\": tempHC[0].id,\r\n    Standard: \"Standard\",\r\n    Hardcore: \"Hardcore\",\r\n  };\r\n};\r\n\r\nconst fetchLeagues = () => {\r\n  return fetchJSON(leaguesApi())\r\n    .then(leagues => {\r\n      return mapToMetaLeagues(leagues);\r\n    })\r\n    .catch(error => {\r\n      console.error(`Couldn't fetch leagues: ${error}`);\r\n    });\r\n};\r\n\r\nexport const useSelectedLeague = () => {\r\n  const [leagues, setLeagues] = useState({});\r\n  useEffect(() => {\r\n    fetchLeagues().then(fetchedLeagues => {\r\n      console.log(`Leagues: ${JSON.stringify(fetchedLeagues)}`);\r\n      setLeagues(fetchedLeagues);\r\n    });\r\n  }, []);\r\n\r\n  const [selectedMetaLeague, setSelectedMetaLeague] = useState(\"Temp SC\");\r\n\r\n  const [selectedLeague, setSelectedLeague] = useState();\r\n  useEffect(() => {\r\n    setSelectedLeague(leagues[selectedMetaLeague]);\r\n  }, [leagues, selectedMetaLeague]);\r\n\r\n  const metaLeagues = [\"Temp SC\", \"Temp HC\", \"Standard\", \"Hardcore\"];\r\n\r\n  return {\r\n    metaLeagues,\r\n    selectedMetaLeague,\r\n    selectedLeague,\r\n    setSelectedMetaLeague,\r\n  };\r\n};\r\n","import { proxy } from \"./config\";\r\n\r\nexport const itemsApi = (category, type, league) => {\r\n  return proxy(\r\n    `https://poe.ninja/api/data/${category}overview?league=${league}&type=${type}`\r\n  );\r\n};\r\n\r\nexport const typeConfigByCategory = () => {\r\n  return {\r\n    currency: {\r\n      currencies: {\r\n        type: \"Currency\",\r\n        name_key: \"currencyTypeName\",\r\n        compare_key: \"chaosEquivalent\",\r\n      },\r\n      fragments: {\r\n        type: \"Fragment\",\r\n        name_key: \"currencyTypeName\",\r\n        compare_key: \"chaosEquivalent\",\r\n      },\r\n    },\r\n    item: {\r\n      accessories: {\r\n        type: \"UniqueAccessory\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      weapons: {\r\n        type: \"UniqueWeapon\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      armours: {\r\n        type: \"UniqueArmour\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      divination_cards: {\r\n        type: \"DivinationCard\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      base_types: {\r\n        type: \"BaseType\",\r\n        name_key: \"detailsId\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      maps: {\r\n        type: \"Map\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      scarabs: {\r\n        type: \"Scarab\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      jewels: {\r\n        type: \"UniqueJewel\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n      flasks: {\r\n        type: \"UniqueFlask\",\r\n        name_key: \"name\",\r\n        compare_key: \"chaosValue\",\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const typeConfig = () => {\r\n  let config = {};\r\n\r\n  for (const [, categoryItems] of Object.entries(typeConfigByCategory())) {\r\n    config = Object.assign(config, categoryItems);\r\n  }\r\n\r\n  return config;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const useEnsureProvider = context => {\r\n  const ctx = React.useContext(context);\r\n\r\n  if (!ctx) {\r\n    throw new Error(\r\n      `${context.displayName} cannot be used outside the provider.`\r\n    );\r\n  }\r\n\r\n  return ctx;\r\n};\r\n\r\nconst SingleExecutionLockContext = React.createContext();\r\nexport const SingleExecutionLockProvider = props => {\r\n  const lock = React.useRef({});\r\n\r\n  return <SingleExecutionLockContext.Provider value={lock} {...props} />;\r\n};\r\n\r\nexport const useSingleExecutionLock = key => {\r\n  const executionLock = useEnsureProvider(SingleExecutionLockContext);\r\n\r\n  let executionAllowed = false;\r\n\r\n  if (!executionLock.current[key]) {\r\n    executionLock.current[key] = true;\r\n    executionAllowed = true;\r\n  }\r\n\r\n  return executionAllowed;\r\n};\r\n","export const deepClone = obj => {\r\n  try {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  } catch (err) {\r\n    console.error(`Object deep clone error: ${err}`);\r\n\r\n    return {};\r\n  }\r\n};\r\n\r\nexport const isDefined = value =>\r\n  typeof value !== \"undefined\" && value !== null;\r\n","import React from \"react\";\r\nimport { fetchJSON } from \"../functions/http\";\r\nimport {\r\n  itemsApi,\r\n  typeConfigByCategory,\r\n  typeConfig,\r\n} from \"../functions/poe-ninja\";\r\nimport { useEnsureProvider, useSingleExecutionLock } from \"./utils\";\r\nimport { deepClone } from \"../functions/utils\";\r\n\r\nconst ItemsContext = React.createContext();\r\n\r\nexport const useItems = () => {\r\n  return useEnsureProvider(ItemsContext);\r\n};\r\n\r\nexport const ItemsProvider = props => {\r\n  const [items, setItems] = React.useState({});\r\n\r\n  const value = React.useMemo(() => [items, setItems], [items]);\r\n\r\n  return <ItemsContext.Provider value={value} {...props} />;\r\n};\r\n\r\nconst find = (items, name) => {\r\n  if (!items) return null;\r\n  let foundItem;\r\n  for (const [type, details] of Object.entries(typeConfig())) {\r\n    const typeItems = items[type] || [];\r\n    if (!typeItems.length) {\r\n      console.log(`${type} is not available`);\r\n    }\r\n    for (const item of items[type] || []) {\r\n      if (item[details.name_key] === name) {\r\n        foundItem = item;\r\n        foundItem.type = type;\r\n        break;\r\n      }\r\n    }\r\n    if (foundItem !== undefined) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return foundItem;\r\n};\r\n\r\nconst fetchItems = league => {\r\n  const items = {};\r\n\r\n  const fetchPromises = Object.entries(typeConfigByCategory())\r\n    .map(([category, categoryItems]) => {\r\n      return Object.entries(categoryItems).map(([type, details]) => {\r\n        const url = itemsApi(category, details.type, league);\r\n        console.log(`Fetching ${type} items for ${league} league from ${url}`);\r\n        return fetchJSON(url)\r\n          .then(itemsForLeague => {\r\n            console.log(\r\n              `Fetched: ${itemsForLeague.lines.length} ${type} items`\r\n            );\r\n            items[type] = itemsForLeague.lines;\r\n          })\r\n          .catch(error => {\r\n            console.error(`Couldn't fetch items: ${error}`);\r\n          });\r\n      });\r\n    })\r\n    .flat();\r\n\r\n  return Promise.all(fetchPromises).then(() => {\r\n    return items;\r\n  });\r\n};\r\n\r\nexport const useSelectedLeagueItems = selectedLeague => {\r\n  const [items, setItems] = useItems();\r\n  const fetchAllowed = useSingleExecutionLock(selectedLeague);\r\n\r\n  React.useEffect(() => {\r\n    if (!selectedLeague) return;\r\n\r\n    if (!items[selectedLeague] && fetchAllowed) {\r\n      console.log(`${selectedLeague} league selected, fetching items...`);\r\n      fetchItems(selectedLeague).then(fetchedItems => {\r\n        const mergedItems = Object.assign(deepClone(items), {\r\n          [selectedLeague]: fetchedItems,\r\n        });\r\n        setItems(mergedItems);\r\n      });\r\n    }\r\n  }, [fetchAllowed, items, selectedLeague, setItems]);\r\n\r\n  return items[selectedLeague];\r\n};\r\n\r\nexport const useFindItems = (league, names) => {\r\n  const items = useSelectedLeagueItems(league);\r\n  return names.map(name => {\r\n    return find(items, name);\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { comparePrice, cost } from \"../functions/compareItems\";\r\nimport { useFindItems } from \"../contexts/items\";\r\nimport { isDefined } from \"../functions/utils\";\r\n\r\nexport const Comparison = ({ selectedLeague, comparison }) => {\r\n  const useCompareText = (baseNames, compareNames) => {\r\n    const baseItems = useFindItems(selectedLeague, baseNames);\r\n    const compareItems = useFindItems(selectedLeague, compareNames);\r\n    let text;\r\n\r\n    if (baseItems.concat(compareItems).some(item => !isDefined(item))) {\r\n      text = \"N/A\";\r\n    } else {\r\n      text = comparePrice(baseItems, compareItems);\r\n    }\r\n\r\n    return text;\r\n  };\r\n\r\n  const useCostText = names => {\r\n    const pieces = names.length;\r\n    const items = useFindItems(selectedLeague, names);\r\n\r\n    let text;\r\n    if (pieces === 0) {\r\n      text = \"\";\r\n    } else if (items.some(item => !isDefined(item))) {\r\n      text = \"N/A\";\r\n    } else {\r\n      text = `, cost: ${cost(items)} chaos, pieces: ${pieces}`;\r\n    }\r\n\r\n    return text;\r\n  };\r\n\r\n  const ComparisonText = () => {\r\n    let text = `${comparison.name}: `;\r\n\r\n    text += `${useCompareText(\r\n      comparison.base,\r\n      comparison.compare\r\n    )} chaos profit`;\r\n\r\n    text += useCostText(comparison.compare);\r\n\r\n    if (comparison.comment) {\r\n      text += ` (${comparison.comment})`;\r\n    }\r\n\r\n    return text;\r\n  };\r\n\r\n  const style = {\r\n    order: useCompareText(comparison.base, comparison.compare),\r\n  };\r\n\r\n  return (\r\n    <li key={comparison.key} style={style}>\r\n      {ComparisonText()}\r\n    </li>\r\n  );\r\n};\r\n\r\nComparison.propTypes = {\r\n  comparison: PropTypes.object,\r\n  selectedLeague: PropTypes.string,\r\n  key: PropTypes.number,\r\n};\r\n","import { typeConfig } from \"./poe-ninja\";\r\n\r\nexport const cost = items => {\r\n  let value = 0;\r\n\r\n  for (const item of items) {\r\n    const compareKey = typeConfig()[item.type].compare_key;\r\n    value += item[compareKey];\r\n  }\r\n\r\n  return Math.round(value);\r\n};\r\n\r\nexport const comparePrice = (baseItems, compareItems) => {\r\n  let value = 0;\r\n\r\n  for (const baseItem of baseItems) {\r\n    const baseItemCompareKey = typeConfig()[baseItem.type].compare_key;\r\n    value += baseItem[baseItemCompareKey];\r\n  }\r\n\r\n  for (const compareItem of compareItems) {\r\n    const compareItemCompareKey = typeConfig()[compareItem.type].compare_key;\r\n    value -= compareItem[compareItemCompareKey];\r\n  }\r\n\r\n  return Math.round(value);\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { comparisons } from \"../functions/config\";\r\nimport { Comparison } from \"./comparison\";\r\n\r\nexport const Comparisons = ({ selectedLeague }) => {\r\n  const comparisonsByGroup = comparisons();\r\n\r\n  return (\r\n    <div>\r\n      {Object.keys(comparisonsByGroup).map(group => (\r\n        <div key={group}>\r\n          <h2>{group}</h2>\r\n          <ul>\r\n            {comparisonsByGroup[group].map((comparison, i) => (\r\n              <Comparison\r\n                selectedLeague={selectedLeague}\r\n                comparison={comparison}\r\n                key={i}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nComparisons.propTypes = {\r\n  selectedLeague: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { useSelectedLeague } from \"./leagues\";\r\nimport { ItemsProvider } from \"../contexts/items\";\r\nimport { SingleExecutionLockProvider } from \"../contexts/utils\";\r\nimport { Comparisons } from \"./comparisons\";\r\n\r\nconst App = () => {\r\n  const {\r\n    metaLeagues,\r\n    selectedMetaLeague,\r\n    selectedLeague,\r\n    setSelectedMetaLeague,\r\n  } = useSelectedLeague();\r\n\r\n  return (\r\n    <div>\r\n      <h1>PoE - What to flip?</h1>\r\n      <select\r\n        name=\"league\"\r\n        value={selectedMetaLeague}\r\n        onChange={event => setSelectedMetaLeague(event.target.value)}\r\n      >\r\n        {metaLeagues.map(league => (\r\n          <option key={league} value={league}>\r\n            {league}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <SingleExecutionLockProvider>\r\n        <ItemsProvider>\r\n          <Comparisons selectedLeague={selectedLeague}></Comparisons>\r\n        </ItemsProvider>\r\n      </SingleExecutionLockProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/app\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}